{"version":3,"sources":["images/BW3.jpg","apis/pixabay.js","apis/tenor.js","components/Globalstyle.js","components/Themes.js","components/SearchBar.js","components/Jumbotron.js","components/ImageList.js","components/GifList.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","SearchBar","state","term","searchType","index","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","placeholder","value","onChange","e","setState","target","class","data-toggle","aria-haspopup","aria-expanded","onClick","aria-hidden","React","Component","jumbotronStyle","backgroundImage","Background","backgroundSize","backgroundPositionY","textStyle","color","Jumbotron","themeToggler","style","ImageList","images","results","map","result","key","id","largeImageURL","GifList","gifs","gif","media","mediumgif","url","still","preview","App","onSearchSubmit","a","response","pixabay","get","params","q","per_page","data","hits","tenor","renderContent","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dabd2622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BW3.2f85b645.jpg\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://pixabay.com/api/\",\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.tenor.com/v1\",\r\n});\r\n","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  background: \"#363537\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n};\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    term: \"\",\r\n    searchType: \"IMAGES\",\r\n    index: 0,\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term, this.state.searchType);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex container mt-4 w-75\">\r\n        <form className=\"input-group\" onSubmit={this.onFormSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type something..\"\r\n            value={this.state.term}\r\n            onChange={(e) => {\r\n              this.setState({ term: e.target.value });\r\n            }}\r\n          />\r\n          <div class=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Type\r\n            </button>\r\n            <div class=\"dropdown-menu\">\r\n              <a\r\n                class={`dropdown-item ${\r\n                  this.state.index === 0 ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() =>\r\n                  this.setState({ index: 0, searchType: \"IMAGES\" })\r\n                }\r\n              >\r\n                Images\r\n              </a>\r\n              <a\r\n                class={`dropdown-item ${\r\n                  this.state.index === 1 ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => this.setState({ index: 1, searchType: \"GIFS\" })}\r\n                onSubmit={this.props.onSubmit}\r\n              >\r\n                Gifs\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Background from \"../images/BW3.jpg\";\r\n\r\nvar jumbotronStyle = {\r\n  backgroundImage: `url(${Background})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundPositionY: \"475px\",\r\n};\r\n\r\nvar textStyle = {\r\n  color: \"white\",\r\n};\r\n\r\nclass Jumbotron extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar justify-content-end\">\r\n          <i className=\"fas fa-moon\" onClick={this.props.themeToggler}></i>\r\n        </nav>\r\n        <section className=\"jumbotron text-center mb-3\" style={jumbotronStyle}>\r\n          <div className=\"container\">\r\n            <h1 className=\"font-weight-bold\" style={textStyle}>\r\n              What do you want to search?\r\n            </h1>\r\n            <SearchBar onSubmit={this.props.onSubmit} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./ImageList.css\";\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.results.map((result) => {\r\n    return (\r\n      <li className=\"image-grid__item\" key={result.id}>\r\n        <a className=\"grid-item\">\r\n          <div\r\n            className=\"grid-item__image\"\r\n            style={{ backgroundImage: `url(${result.largeImageURL})` }}\r\n          ></div>\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"image-grid\">{images}</ul>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport GifPlayer from \"react-gif-player\";\r\nimport \"./ImageList.css\";\r\n\r\nconst GifList = (props) => {\r\n  const gifs = props.results.map((result) => {\r\n    return (\r\n      <li className=\"image-grid__item\" key={result.id}>\r\n        <a className=\"grid-item\">\r\n          <div className=\"grid-item__image\" key={result.id}>\r\n            <GifPlayer\r\n              gif={result.media[0].mediumgif.url}\r\n              still={result.media[0].mediumgif.preview}\r\n            />\r\n          </div>\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"image-grid\">{gifs}</ul>;\r\n};\r\n\r\nexport default GifList;\r\n","import React from \"react\";\r\nimport pixabay from \"../apis/pixabay\";\r\nimport tenor from \"../apis/tenor\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./Globalstyle\";\r\nimport { lightTheme, darkTheme } from \"./Themes\";\r\nimport Jumbotron from \"./Jumbotron\";\r\nimport ImageList from \"./ImageList\";\r\nimport GifList from \"./GifList\";\r\n\r\nclass App extends React.Component {\r\n  state = { results: [], type: \"IMAGES\", theme: \"light\" };\r\n\r\n  //dark mode\r\n  themeToggler = () => {\r\n    this.state.theme === \"light\"\r\n      ? this.setState({ theme: \"dark\" })\r\n      : this.setState({ theme: \"light\" });\r\n  };\r\n\r\n  onSearchSubmit = async (term, searchType = \"IMAGES\") => {\r\n    var response = [];\r\n    if (searchType === \"IMAGES\") {\r\n      response = await pixabay.get(\"\", {\r\n        params: {\r\n          key: \"18788344-f85e78cdb827a4eb9e46b80b4\",\r\n          q: term,\r\n          per_page: 100,\r\n        },\r\n      });\r\n      this.setState({ results: response.data.hits, type: searchType });\r\n    } else {\r\n      response = await tenor.get(\"/search\", {\r\n        params: {\r\n          key: \"6QICWSS34NX5\",\r\n          q: term,\r\n        },\r\n      });\r\n      this.setState({ results: response.data.results, type: searchType });\r\n    }\r\n  };\r\n\r\n  renderContent() {\r\n    if (this.state.type === \"IMAGES\") {\r\n      return (\r\n        <div>\r\n          <ImageList results={this.state.results} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <GifList results={this.state.results} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider\r\n        theme={this.state.theme === \"light\" ? lightTheme : darkTheme}\r\n      >\r\n        <>\r\n          <GlobalStyles />\r\n          <div>\r\n            <Jumbotron\r\n              onSubmit={this.onSearchSubmit}\r\n              themeToggler={this.themeToggler}\r\n            />\r\n            {this.renderContent()}\r\n          </div>\r\n        </>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}